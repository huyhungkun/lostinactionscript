package com.flashdynamix.motion.vectors {	import flash.display.Graphics;	import flash.geom.Matrix;		/**	 * @author shanem	 */	public class Gradient implements IVector {		private var _rotation : Number;		private var _x : Number;		private var _y : Number;		private var _width : Number;		private var _height : Number;		public var type : String;		public var colors : Array;		public var alphas : Array;		public var ratios : Array;		public var mtx : Matrix;		public var spreadMethod : String;		public var interpolationMethod : String;		public var focalPointRatio : Number;		public function Gradient(x : Number, y : Number, width : Number, height : Number, rotation : Number, colors : Array, alphas : Array, ratios : Array, type : String = "linear", spreadMethod : String = "pad", interpolationMethod : String = "rgb", focalPointRatio : Number = 0) {			_x = x;			_y = y;			_width = width;			_height = height;			_rotation = rotation;						this.colors = colors;			this.alphas = alphas;			this.ratios = ratios;			this.type = type;			this.spreadMethod = spreadMethod;			this.interpolationMethod = interpolationMethod;			this.focalPointRatio = focalPointRatio;						mtx = new Matrix();			update();		}		public function set rotation(num : Number) : void {			_rotation = num;			update();		}		public function get rotation() : Number {			return _rotation;		}		public function set x(num : Number) : void {			_x = num;			update();		}		public function get x() : Number {			return _x;		}		public function set y(num : Number) : void {			_y = num;			update();		}		public function get y() : Number {			return _y;		}		public function set width(num : Number) : void {			_width = num;			update();		}		public function get width() : Number {			return _width;		}		public function set height(num : Number) : void {			_height = num;			update();		}		public function get height() : Number {			return _height;		}		public function draw(vector : Graphics) : void {			vector.beginGradientFill(type, colors, alphas, ratios, mtx, spreadMethod, interpolationMethod, focalPointRatio);			vector.drawRect(0, 0, 550, 400);		}		private function update() : void {			mtx.createGradientBox(_width, _height, _rotation, _x, _y);		}	}}