package com.flashdynamix.motion.extras {	import flash.display.DisplayObject;	import flash.geom.ColorTransform;	import flash.utils.Proxy;	import flash.utils.flash_proxy;		/**	 * @author FlashDynamix	 * Allows for tweening between ColorTransformation or tints for a DisplayObject	 */	public class Color extends Proxy {		public var item : DisplayObject;		public var from : ColorTransform;		public var to : ColorTransform;		public var current : ColorTransform;		private var _position : Number = 0;		/*		 * @item The DisplayObject you would like to tween a tint for.		 * @to Either a ColorTransformation or color int which the tween will to at.		 * @from Either a ColorTransformation or color int which the tween will from at if this is null or not defined then the current		 * ColorTransform used in the DisplayObject will be used.		 */		public function Color(item : DisplayObject, to : * = null, from : * = null) {			this.item = item;						if(from != null) {				this.from = (from is uint) ? getTint(from) : from;			} else {				this.from = item.transform.colorTransform;			}						if(to != null) {				this.to = (to is uint) ? getTint(to) : to;			}else {				this.to = new ColorTransform();			}						current = item.transform.colorTransform;		}		public function set position(num : Number) : void {			_position = num;						var q : Number = 1 - _position;						current.redMultiplier = from.redMultiplier * q + to.redMultiplier * _position;			current.greenMultiplier = from.greenMultiplier * q + to.greenMultiplier * _position;			current.blueMultiplier = from.blueMultiplier * q + to.blueMultiplier * _position;			current.alphaMultiplier = from.alphaMultiplier * q + to.alphaMultiplier * _position;			current.redOffset = from.redOffset * q + to.redOffset * _position;			current.greenOffset = from.greenOffset * q + to.greenOffset * _position;			current.blueOffset = from.blueOffset * q + to.blueOffset * _position;			current.alphaOffset = from.alphaOffset * q + to.alphaOffset * _position;							item.transform.colorTransform = current;		}		public function get position() : Number {			return _position;		}		private function getTint(colour : uint) : ColorTransform {			var ct : ColorTransform = new ColorTransform();			ct.color = colour;					return ct;		}		override flash_proxy function setProperty(name : *, value : *) : void {			current[name] = value;			item.transform.colorTransform = current;		}		override flash_proxy function getProperty(name : *) : * {			return current[name];		}	}}